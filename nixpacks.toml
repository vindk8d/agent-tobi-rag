# Nixpacks Configuration for Railway Deployment
# WeasyPrint system dependencies with correct Nix package names

[phases.setup]
nixPkgs = [
    # Core WeasyPrint dependencies (proper Nix names)
    "cairo", "pango", "gdk-pixbuf", "glib", "gobject-introspection",
    # Text and font rendering
    "harfbuzz", "fribidi", "fontconfig", "freetype",
    # Image processing
    "libjpeg", "libpng", "zlib",
    # XML processing  
    "libxml2", "libxslt",
    # Database connectivity
    "postgresql",
    # Development tools
    "pkg-config", "gcc"
]

[phases.install]
cmds = [
    # Create library links for WeasyPrint to find
    "echo '=== CREATING LIBRARY LINKS ==='",
    "mkdir -p /usr/lib/x86_64-linux-gnu",
    "find /nix/store -name 'libgobject-2.0.so*' -exec ln -sf {} /usr/lib/x86_64-linux-gnu/libgobject-2.0.so.0 \\; 2>/dev/null || true",
    "find /nix/store -name 'libglib-2.0.so*' -exec ln -sf {} /usr/lib/x86_64-linux-gnu/libglib-2.0.so.0 \\; 2>/dev/null || true", 
    "find /nix/store -name 'libcairo.so*' -exec ln -sf {} /usr/lib/x86_64-linux-gnu/libcairo.so.2 \\; 2>/dev/null || true",
    "find /nix/store -name 'libpango-1.0.so*' -exec ln -sf {} /usr/lib/x86_64-linux-gnu/libpango-1.0.so.0 \\; 2>/dev/null || true",
    "find /nix/store -name 'libgdk_pixbuf-2.0.so*' -exec ln -sf {} /usr/lib/x86_64-linux-gnu/libgdk_pixbuf-2.0.so.0 \\; 2>/dev/null || true",
    "echo '=== SETTING UP FONTCONFIG ==='",
    "mkdir -p /etc/fonts /tmp/fontconfig",
    "echo '<?xml version=\"1.0\"?><fontconfig><dir>/nix/store/*/share/fonts</dir><dir>/usr/share/fonts</dir><cachedir>/tmp/fontconfig</cachedir></fontconfig>' > /etc/fonts/fonts.conf",
    "fc-cache -f -v 2>/dev/null || echo 'fc-cache not available'",
    "echo '=== DEBUGGING LIBRARY SETUP ==='",
    "ls -la /usr/lib/x86_64-linux-gnu/libgobject* || echo 'No libgobject links created'",
    "echo '=== FONTCONFIG DEBUG ==='",
    "ls -la /etc/fonts/ || echo 'No fonts config'",
    "ldconfig",
    "echo '=== INSTALLING PYTHON PACKAGES ==='",
    "python -m venv --copies /opt/venv",
    ". /opt/venv/bin/activate && pip install --upgrade pip setuptools wheel", 
    ". /opt/venv/bin/activate && pip install -r requirements.txt"
]

[start]
cmd = ". /opt/venv/bin/activate && ./start.sh"

[variables]
PORT = "8000"
PYTHONDONTWRITEBYTECODE = "1"
PYTHONUNBUFFERED = "1" 
ENVIRONMENT = "production"
LD_LIBRARY_PATH = "/usr/lib/x86_64-linux-gnu:/nix/store/*/lib"
FONTCONFIG_PATH = "/etc/fonts"
FONTCONFIG_FILE = "/etc/fonts/fonts.conf"
