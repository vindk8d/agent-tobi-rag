# Production Requirements - Flexible for Railway Deployment
# Using compatible ranges to avoid dependency conflicts

# ===== CORE WEB FRAMEWORK =====
fastapi>=0.115.0,<0.116.0
uvicorn[standard]>=0.32.0,<0.33.0
python-multipart>=0.0.17
pydantic>=2.10.0,<3.0.0
pydantic-settings>=2.6.0,<3.0.0

# ===== DATABASE & STORAGE =====
supabase>=2.9.0,<3.0.0
# Use psycopg (v3) instead of psycopg2-binary for compatibility with langgraph
psycopg[binary]>=3.1.0,<4.0.0
psycopg-pool>=3.1.0,<4.0.0
redis>=5.2.0,<6.0.0

# ===== AI & LANGUAGE MODELS =====
# Let pip resolve LangChain ecosystem automatically
openai>=1.57.0,<2.0.0
langchain>=0.3.0,<0.4.0
langchain-core>=0.3.0,<0.4.0
langchain-openai>=0.2.0,<0.3.0
langchain-community>=0.3.0,<0.4.0
langgraph>=0.6.0,<0.7.0
langgraph-checkpoint-postgres>=2.0.0,<3.0.0
tiktoken>=0.8.0,<1.0.0

# ===== DOCUMENT PROCESSING =====
PyPDF2>=3.0.0,<4.0.0
python-docx>=1.1.0,<2.0.0
beautifulsoup4>=4.12.0,<5.0.0
lxml>=5.3.0,<6.0.0

# ===== PDF GENERATION =====
weasyprint>=63.0,<64.0
cairocffi>=1.7.0,<2.0.0
reportlab>=4.0.0,<5.0.0  # Fallback when WeasyPrint fails
cffi>=1.17.0,<2.0.0

# ===== HTTP & NETWORKING =====
requests>=2.32.0,<3.0.0
httpx>=0.27.0,<0.28.0
aiohttp>=3.11.0,<4.0.0
aiofiles>=24.1.0,<25.0.0

# ===== UTILITIES =====
python-dotenv>=1.0.0,<2.0.0
jinja2>=3.1.0,<4.0.0
validators>=0.34.0,<1.0.0

# ===== TASK SCHEDULING =====
apscheduler>=3.11.0,<4.0.0

# ===== VECTOR DATABASE =====
pgvector>=0.3.0,<1.0.0

# ===== PRODUCTION OPTIMIZATIONS =====
# Faster JSON parsing
orjson>=3.10.0,<4.0.0

# Better logging for production
structlog>=24.4.0,<25.0.0 